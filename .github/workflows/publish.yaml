# 工作流名称
name: Quarto Publish to Quarto Pub

# 工作流的触发条件
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - prerelease
  workflow_call:
    inputs:
      ref:
        required: true
        description: 'The ref to trigger the workflow on'
        type: string
      prerelease:
        required: true
        description: 'Whether to deploy prerelease or release site'
        type: boolean
        default: false

# 并发控制
concurrency:
  group: ${{ format('{0} - {1} - {2}', github.workflow, github.ref, inputs.prerelease && 'prerelease' || 'main') }}
  cancel-in-progress: true

# 定义作业
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：检出代码
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || '' }}

      # 步骤2：获取 Quarto 最新的预发行版版本号 (可选)
      # 如果你不需要总是使用最新的预发行版，可以删除此步骤，并在下一步中写死版本号
      - name: Get latest Quarto pre-release version
        id: github-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "version=$(gh api repos/quarto-dev/quarto-cli/releases | jq -r 'map(select(.prerelease)) | first | .tag_name | sub("^v";"")')" >> "$GITHUB_OUTPUT"
          
      # 步骤3：安装 Quarto
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: ${{ steps.github-release.outputs.version }}

      # 步骤4：发布到 Quarto Pub
      # 这一步会根据 Profile 自动完成渲染和发布
      - name: Publish to Quarto Pub
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          # 直接指定目标为 Quarto Pub
          target: quarto-pub
          # 根据是否为预发行版，设置渲染和发布的配置文件
          # 如果是预发行版，Quarto 会寻找 _quarto-prerelease-docs.yml
          profile: ${{ (inputs.prerelease || (contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name) && github.ref == 'refs/heads/prerelease')) && 'prerelease-docs' || '' }}
        env:
          # 核心改动：使用 QUARTO_PAT 作为认证令牌
          QUARTO_PAT: ${{ secrets.QUARTO_PAT }}
